name: 'Blender Addon Release'
description: 'Action to automatically build the Blender add-on and store the resulting .zip artifact.'
author: 'Andreas Gajdosik, BlenderKit'

branding:
  icon: 'box'
  color: 'orange'

inputs:
  version:
    description: 'Version of the release, format: X.Y.Z (major.minor.patch).'
  release_stage:
    description: 'Stage of the release, available options: alpha, beta, rc (release candidate), gold (final public release).'
    default: 'gold'
    options: [ 'alpha', 'beta', 'rc', 'gold']
  artifact_name:
    description: 'Name of the artifact (previously uploaded by build job) to be downloaded. If left empty the action will use repository name.'
    default: ''
  release_name:
    description: 'Name of the release, if left empty, action will use artifact name.'
    default: ''

runs:
  using: "composite"
  steps:
    - name: Set release name
      run: |
        if [ -z "${{ inputs.release_name }}" ]; then
          echo "RELEASE_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
        else
          echo "RELEASE_NAME=${{ inputs.release_name }}" >> $GITHUB_ENV
        fi

    - name: Create out directory
      run: mkdir out
      shell: bash

    - name: Download artifact with defined artifact_name
      if: ${{ inputs.artifact_name != '' }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifact_name }}
        path: ./out

    - name: Download artifact with repository name
      if: ${{ inputs.artifact_name == '' }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ github.event.repository.name }}
        path: ./out

    - name: Zip contents of out
      shell: bash
      run: |
        zip -r ./out/{{ env.RELEASE_NAME }}-v${{ inputs.version }}-${{inputs.release_stage == 'gold' && '' || inputs.release_stage}}.zip ./out/
      
    - name: LS
      shell: bash
      run: ls ./out

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        name: ${{env.RELEASE_NAME}} v${{inputs.version}}${{inputs.release_stage == 'gold' && '' || format('-{0}', inputs.release_stage)}}
        prerelease: ${{ inputs.release_stage != 'gold' && 'true' || 'false' }}
        tag_name: v${{inputs.version}}
        files: ./out/${{env.RELEASE_NAME}}-v${{inputs.version}}-${{inputs.release_stage == 'gold' && '' || inputs.release_stage}}.zip
